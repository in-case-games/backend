// <auto-generated />
using System;
using Game.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Game.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230622123101_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Game.DAL.Entities.GameItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Cost")
                        .HasColumnType("DECIMAL(18,5)")
                        .HasColumnName("cost");

                    b.HasKey("Id")
                        .HasName("pk_game_item");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_game_item_id");

                    b.ToTable("GameItem", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.LootBox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("DECIMAL(18,5)")
                        .HasColumnName("balance");

                    b.Property<decimal>("Cost")
                        .HasColumnType("DECIMAL(18,5)")
                        .HasColumnName("cost");

                    b.Property<bool>("IsActiveBanner")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active_banner");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean")
                        .HasColumnName("is_locked");

                    b.Property<decimal>("VirtualBalance")
                        .HasColumnType("DECIMAL(18,5)")
                        .HasColumnName("virtual_balance");

                    b.HasKey("Id")
                        .HasName("pk_loot_box");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_loot_box_id");

                    b.ToTable("LootBox", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.LootBoxInventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BoxId")
                        .HasColumnType("uuid")
                        .HasColumnName("box_id");

                    b.Property<int>("ChanceWining")
                        .HasColumnType("integer")
                        .HasColumnName("chance_wining");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("item_id");

                    b.HasKey("Id")
                        .HasName("pk_loot_box_inventory");

                    b.HasIndex("BoxId")
                        .HasDatabaseName("ix_loot_box_inventory_box_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_loot_box_inventory_id");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_loot_box_inventory_item_id");

                    b.ToTable("LootBoxInventory", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_user_id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.UserAdditionalInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("DECIMAL(18,5)")
                        .HasColumnName("balance");

                    b.Property<bool>("IsGuestMode")
                        .HasColumnType("boolean")
                        .HasColumnName("is_guest_mode");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_additional_info");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_user_additional_info_id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_additional_info_user_id");

                    b.ToTable("UserAdditionalInfo", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.UserOpening", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BoxId")
                        .HasColumnType("uuid")
                        .HasColumnName("box_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("item_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_opening");

                    b.HasIndex("BoxId")
                        .HasDatabaseName("ix_user_opening_box_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_user_opening_id");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_user_opening_item_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_opening_user_id");

                    b.ToTable("UserOpening", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.UserPathBanner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BoxId")
                        .HasColumnType("uuid")
                        .HasColumnName("box_id");

                    b.Property<decimal>("FixedCost")
                        .HasColumnType("DECIMAL(18,5)")
                        .HasColumnName("fixed_cost");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("item_id");

                    b.Property<int>("NumberSteps")
                        .HasColumnType("integer")
                        .HasColumnName("number_steps");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_path_banner");

                    b.HasIndex("BoxId")
                        .HasDatabaseName("ix_user_path_banner_box_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_user_path_banner_id");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_user_path_banner_item_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_path_banner_user_id");

                    b.ToTable("UserPathBanner", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.UserPromocode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Discount")
                        .HasColumnType("DECIMAL(18,5)")
                        .HasColumnName("discount");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_promocode");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_user_promocode_id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_promocode_user_id");

                    b.ToTable("UserPromocode", (string)null);
                });

            modelBuilder.Entity("Game.DAL.Entities.LootBoxInventory", b =>
                {
                    b.HasOne("Game.DAL.Entities.LootBox", "Box")
                        .WithMany("Inventories")
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_loot_box_inventory_loot_box_box_id");

                    b.HasOne("Game.DAL.Entities.GameItem", "Item")
                        .WithMany("Inventories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_loot_box_inventory_game_item_item_id");

                    b.Navigation("Box");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Game.DAL.Entities.UserAdditionalInfo", b =>
                {
                    b.HasOne("Game.DAL.Entities.User", "User")
                        .WithOne("AdditionalInfo")
                        .HasForeignKey("Game.DAL.Entities.UserAdditionalInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_additional_info_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Game.DAL.Entities.UserOpening", b =>
                {
                    b.HasOne("Game.DAL.Entities.LootBox", "Box")
                        .WithMany("Openings")
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_opening_loot_box_box_id");

                    b.HasOne("Game.DAL.Entities.GameItem", "Item")
                        .WithMany("Openings")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_opening_game_item_item_id");

                    b.HasOne("Game.DAL.Entities.User", "User")
                        .WithMany("Openings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_opening_user_user_id");

                    b.Navigation("Box");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Game.DAL.Entities.UserPathBanner", b =>
                {
                    b.HasOne("Game.DAL.Entities.LootBox", "Box")
                        .WithMany("Paths")
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_path_banner_loot_box_box_id");

                    b.HasOne("Game.DAL.Entities.GameItem", "Item")
                        .WithMany("Paths")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_path_banner_game_item_item_id");

                    b.HasOne("Game.DAL.Entities.User", "User")
                        .WithMany("Paths")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_path_banner_user_user_id");

                    b.Navigation("Box");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Game.DAL.Entities.UserPromocode", b =>
                {
                    b.HasOne("Game.DAL.Entities.User", "User")
                        .WithOne("Promocode")
                        .HasForeignKey("Game.DAL.Entities.UserPromocode", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_promocode_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Game.DAL.Entities.GameItem", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Openings");

                    b.Navigation("Paths");
                });

            modelBuilder.Entity("Game.DAL.Entities.LootBox", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Openings");

                    b.Navigation("Paths");
                });

            modelBuilder.Entity("Game.DAL.Entities.User", b =>
                {
                    b.Navigation("AdditionalInfo");

                    b.Navigation("Openings");

                    b.Navigation("Paths");

                    b.Navigation("Promocode");
                });
#pragma warning restore 612, 618
        }
    }
}
