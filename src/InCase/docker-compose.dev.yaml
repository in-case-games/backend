version: "3"
services:
  nosqldata:
    image: mongo
    restart: always
    hostname: mongodb
    ports:
      - "27017:27017"

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    container_name: rabbitmq
    expose:
      - "5672"
      - "15672"
    volumes:
      - rabbitmq:/rabbitmq
    ports:
      - "15672:15672"

  psql: 
    image: postgres:13.3
    hostname: psql
    restart: always
    container_name: psql
    env_file:
      - pg.env
    ports:
      - "5432:5432"
    stdin_open: true
    volumes:
      - database:/var/lib/postgresql/data
    tty: true
    command: postgres -c 'max_connections=200'

  auth-api: 
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "auth-api"
    build:
      context: .
      dockerfile: Services/Authentication/Authentication.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_AUTH:/root/.microsoft/usersecrets/$USER_SECRETS_ID_AUTH:ro
    ports:
      - "5033:80"

  email-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "email-api"
    build:
      context: .
      dockerfile: Services/EmailSender/EmailSender.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_EMAIL:/root/.microsoft/usersecrets/$USER_SECRETS_ID_EMAIL:ro
    ports:
      - "5225:80"

  game-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "game-api"
    build:
      context: .
      dockerfile: Services/Game/Game.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq
    volumes:
       - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_GAME:/root/.microsoft/usersecrets/$USER_SECRETS_ID_GAME:ro
    ports:
      - "5184:80"

  identity-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "identity-api"
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_IDENTITY:/root/.microsoft/usersecrets/$USER_SECRETS_ID_IDENTITY:ro
    ports:
      - "5259:80"

  payment-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "payment-api"
    build:
      context: .
      dockerfile: Services/Payment/Payment.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_PAYMENT:/root/.microsoft/usersecrets/$USER_SECRETS_ID_PAYMENT:ro
    ports:
      - "5039:80"

  promocode-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "promocode-api"
    build:
      context: .
      dockerfile: Services/Promocode/Promocode.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_PROMOCODE:/root/.microsoft/usersecrets/$USER_SECRETS_ID_PROMOCODE:ro
    ports:
      - "5163:80"

  resources-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "resources-api"
    build:
      context: .
      dockerfile: Services/Resources/Resources.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_RESOURCES:/root/.microsoft/usersecrets/$USER_SECRETS_ID_RESOURCES:ro
    ports:
      - "5073:80"

  review-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "review-api"
    build:
      context: .
      dockerfile: Services/Review/Review.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_REVIEW:/root/.microsoft/usersecrets/$USER_SECRETS_ID_REVIEW:ro
    ports:
      - "5079:80"

  statistics-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "statistics-api"
    build:
      context: .
      dockerfile: Services/Statistics/Statistics.API/Dockerfile
    depends_on:
      - rabbitmq
      - nosqldata
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_STATISTICS:/root/.microsoft/usersecrets/$USER_SECRETS_ID_STATISTICS:ro
    ports:
      - "5231:80"

  support-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "support-api"
    build:
      context: .
      dockerfile: Services/Support/Support.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_SUPPORT:/root/.microsoft/usersecrets/$USER_SECRETS_ID_SUPPORT:ro
    ports:
      - "5155:80"

  withdraw-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "withdraw-api"
    build:
      context: .
      dockerfile: Services/Withdraw/Withdraw.API/Dockerfile
    depends_on:
      - psql
      - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_WITHDRAW:/root/.microsoft/usersecrets/$USER_SECRETS_ID_WITHDRAW:ro
    ports:
      - "5187:80"

  gateway-api:
    image: "gateway-api"
    environment:
      ASPNETCORE_HTTPS_PORT: "5000"
      ASPNETCORE_URLS: https://+:443;http://+:80
      ASPNETCORE_Kestrel__Certificates__Default__Password: password 
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
    build:
      context: .
      dockerfile: InCase.ApiGateway/Dockerfile
    ports:
      - "5000:443"
      - "5001:80"
    volumes:
      - ~/.aspnet/https:/https:ro


volumes:
  database:
  rabbitmq: