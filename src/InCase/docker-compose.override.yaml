version: "3"
services:
  nosqldata:
    image: mongo

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 15672:15672

  psql: 
    image: postgres:13.3
    env_file:
      - .env
    ports:
      - "5432:5432"

  auth-api: 
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "auth-api"
    build:
      context: .
      dockerfile: Services/Authentication/Authentication.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_AUTH:/root/.microsoft/usersecrets/$USER_SECRETS_ID_AUTH:ro
    ports:
      - "8221:5033"
    command: ["dotnet", "ef", "database update"]

  email-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "email-api"
    build:
      context: .
      dockerfile: Services/EmailSender/EmailSender.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_EMAIL:/root/.microsoft/usersecrets/$USER_SECRETS_ID_EMAIL:ro
    ports:
      - "8222:5225"
    command: ["dotnet", "ef", "database update"]

  game-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "game-api"
    build:
      context: .
      dockerfile: Services/Game/Game.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq
    volumes:
       - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_GAME:/root/.microsoft/usersecrets/$USER_SECRETS_ID_GAME:ro
    ports:
      - "8223:5184"
    command: ["dotnet", "ef", "database update"]

  identity-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "identity-api"
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_IDENTITY:/root/.microsoft/usersecrets/$USER_SECRETS_ID_IDENTITY:ro
    ports:
      - "8224:5259"
    command: ["dotnet", "ef", "database update"]

  payment-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "payment-api"
    build:
      context: .
      dockerfile: Services/Payment/Payment.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_PAYMENT:/root/.microsoft/usersecrets/$USER_SECRETS_ID_PAYMENT:ro
    ports:
      - "8225:5039"
    command: ["dotnet", "ef", "database update"]

  promocode-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "promocode-api"
    build:
      context: .
      dockerfile: Services/Promocode/Promocode.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_PROMOCODE:/root/.microsoft/usersecrets/$USER_SECRETS_ID_PROMOCODE:ro
    ports:
      - "8226:5163"
    command: ["dotnet", "ef", "database update"]

  resources-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "resources-api"
    build:
      context: .
      dockerfile: Services/Resources/Resources.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_RESOURCES:/root/.microsoft/usersecrets/$USER_SECRETS_ID_RESOURCES:ro
    ports:
      - "8227:5073"
    command: ["dotnet", "ef", "database update"]

  review-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "review-api"
    build:
      context: .
      dockerfile: Services/Review/Review.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_REVIEW:/root/.microsoft/usersecrets/$USER_SECRETS_ID_REVIEW:ro
    ports:
      - "8228:5079"
    command: ["dotnet", "ef", "database update"]

  statistics-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "statistics-api"
    build:
      context: .
      dockerfile: Services/Statistics/Statistics.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq
        - nosqldata
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_STATISTICS:/root/.microsoft/usersecrets/$USER_SECRETS_ID_STATISTICS:ro
    ports:
      - "8229:5231"
    command: ["dotnet", "ef", "database update"]

  support-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "support-api"
    build:
      context: .
      dockerfile: Services/Support/Support.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_SUPPORT:/root/.microsoft/usersecrets/$USER_SECRETS_ID_SUPPORT:ro
    ports:
      - "8231:5155"
    command: ["dotnet", "ef", "database update"]

  withdraw-api:
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    env_file:
      - .env
    image: "withdraw-api"
    build:
      context: .
      dockerfile: Services/Withdraw/Withdraw.API/Dockerfile
    depends_on:
        - psql
        - rabbitmq 
    volumes:
      - $APPDATA/Microsoft/UserSecrets/$USER_SECRETS_ID_WITHDRAW:/root/.microsoft/usersecrets/$USER_SECRETS_ID_WITHDRAW:ro
    ports:
      - "8232:5187"
    command: ["dotnet", "ef", "database update"]

  gateway-api:
    image: "gateway-api"
    build:
      context: .
      dockerfile: InCase.ApiGateway/Dockerfile
    ports:
      - "80:5000"
        